name: Smoke Test

on:
  pull_request:
  workflow_dispatch:

jobs:
  detect-changes:
    uses: ./.github/workflows/detect-changes-matrix.yml
  filter:
    runs-on: ubuntu-latest
    needs: detect-changes
    name: Filter changes with active smoke tests
    outputs:
      matrix: ${{ steps.set-matrix.outputs.matrix }}
    steps:
      - name: Filter
        id: set-matrix
        run: |
          # TODO: Add a smoke test with fixture in integrations as well
          MATRIX=$(echo ${{ toJSON(needs.detect-changes.outputs.matrix) }} | jq -c 'map(select(.=="."))')
          echo "matrix=${MATRIX}" >> ${GITHUB_OUTPUT}
  smoke-test:
    name: ${{ matrix.folder == '.' && 'ðŸŒŠ Ocean Core' || format('ðŸš¢ {0}', matrix.folder) }}
    needs: filter
    runs-on: ubuntu-latest
    strategy:
      matrix:
        folder: ${{ fromJson(needs.filter.outputs.matrix) }}
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v4
      - name: Install poetry
        run: pipx install poetry
      - name: Set up Python 3.11
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'
          cache: 'poetry'
      - name: Cache Docker images
        uses: ScribeMD/docker-cache@0.5.0
        with:
          key: docker-${{ runner.os }}-${{ hashFiles('integrations/fake-integration/pyproject.toml') }}
      - name: Install dependencies
        working-directory: ${{ matrix.folder != '.' && format('integrations/{0}', matrix.folder) || '.' }}
        run: |
          make install
      - name: Build
        working-directory: ${{ matrix.folder != '.' && format('integrations/{0}', matrix.folder) || '.' }}
        run: |
          make build
      - name: Smoke Test
        working-directory: ${{ matrix.folder != '.' && format('integrations/{0}', matrix.folder) || '.' }}
        env:
          PORT_CLIENT_ID: ${{ secrets.PORT_CLIENT_ID }}
          PORT_CLIENT_SECRET: ${{ secrets.PORT_CLIENT_SECRET }}
          PORT_BASE_URL: ${{ secrets.PORT_BASE_URL }}
        run: |
          ./scripts/run-smoke-test.sh
